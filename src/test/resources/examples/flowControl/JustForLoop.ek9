#!ek9
defines module com.customer.just.loops
  defines type
    List of String
    List of Character

  defines function
    workHours()
      -> time as Time
      <- workTime as Boolean: time < 12:00 or time > 14:00

  defines program
    collectionsForLoop()
      stdout <- Stdout()
      
      stdout.println("Strings")      
      for item in ["Alpha", "Beta", "Charlie"]
        stdout.println(item)

      stdout.println("Characters1")
      //The alternative is when you already have an iterator
      moreItems <- ['A', 'B', 'C']
      for item in moreItems.iterator()
        stdout.println(item)

      stdout.println("Characters while")
      itemIter1 <- moreItems.iterator()
      while itemIter1.hasNext()
        item <- itemIter1.next()
        stdout.println(item)
      
      stdout.println("Characters do/while")  
      itemIter2 <- moreItems.iterator()

      if itemIter2.hasNext()
        do
          item <- itemIter2.next()
          stdout.println(item)  
        while itemIter2.hasNext()
        
      //Now a loop withing a loop
      stdout.println("Loop in Loop")  
      for item in moreItems
        stdout.println(item)
        for innerItem in items
          stdout.println(innerItem)
    
    integerForLoop()
      stdout <- Stdout()
      for i in 1 ... 10
        stdout.println("Value [" + $i + "]")
         
      for i in 1 ... 9 by 2
        stdout.println("Value [" + $i + "]")
        
    floatForLoop()
      stdout <- Stdout()
      
      //So you could do a calculation to get this value
      incrementer <- 6.3
      for i in 8.2 ... 30.0 by incrementer
        stdout.println("Value [" + $i + "]")
        
      //descending  
      for i in 90.0 ... 70.0 by -5.0
        stdout.println("Value [" + $i + "]")
        
    timeForLoop()
      stdout <- Stdout()
      
      //From 9-5 every half hour
      start <- Time().startOfDay() + PT9H
      end <- Time().endOfDay() - PT6H30M
      thirtyMinutes <- PT30M
      
      //Be aware that time loops around.
      for i in start ... end by thirtyMinutes
        stdout.println("Value [" + $i + "]")
    
    
    timePipeLine()
      stdout <- Stdout()
      
      //From 9-5 every half hour
      start <- Time().startOfDay() + PT9H
      end <- Time().endOfDay() - PT6H30M
      thirtyMinutes <- PT30M
            
      for i in start ... end by thirtyMinutes | filter by workHours > stdout    

    collectionsPipeLine()
      stdout <- Stdout()

      items <- ["Alpha", "Beta", "Charlie"]
      cat items > stdout

      //The alternative is when you already have an iterator
      moreItems <- ['A', 'B', 'C']
      iter <- moreItems.iterator()
      cat iter > stdout
          
//EOF
