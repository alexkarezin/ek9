#!ek9
<?-
  Because there are so many operators, I've broken examples up into multiple files (even just for classes).
-?>
defines module bad.classes.operators.examples1

  defines class

    //Here are some bad example of the logical operators.
    C1

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_BOOLEAN
      operator <
        -> arg0 as C1
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_BOOLEAN
      operator >
        -> arg0 as C1

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator >
        <- rtn as Boolean: true

      //Has no argument to check equality against.
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator ==
        <- rtn as Boolean: true

      //Has too many arguments
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator <=
        ->
          arg0 as C1
          arg1 as C1
        <- rtn as Boolean: true

      //has no arguments or return
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator >=
        var <- 1
        assert var?

      //Should use <> for not equals
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: BAD_NOT_EQUAL_OPERATOR
      operator !=
        -> arg0 as C1
        <- rtn as Boolean: true

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator <=>
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator <=>
        ->
          arg0 as C1
          arg1 as Float
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_INTEGER
      operator <=>
        -> arg0 as C1
        <- rtn as C1: this

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_INTEGER
      operator <~>
        -> arg0 as C1
        <- rtn as Boolean: true

//EOF