#!ek9
<?-
  Because there are so many operators, I've broken examples up into multiple files (even just for classes).
  Do not check overrides yet, not until the full resolution phase.
-?>
defines module bad.classes.operators.examples5

  defines class

    //Some single argument operators, some with specific types on the argument,
    //some can return anything, but others specific types.
    C5

      //Shift right, accepts one Integer parameter and can return any type

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator >>
        ->
          arg0 as Integer
          arg1 as Integer
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator >>
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: RETURNING_MISSING
      operator >>
        -> arg0 as Integer
        assert arg0?

      //Shift left, accepts one Integer parameter and can return any type

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator <<

      //AND accepts any type of parameter (just one) and returns any type
      //This is OkK, so check variations on other operators.
      operator and
        -> arg0 as Float
        <- rtn as Integer: 0

      //OR accepts any type of parameter (just one) and returns any type
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator or
        ->
          arg0 as Integer
          arg1 as Integer
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator or
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: RETURNING_MISSING
      operator or
        -> arg0 as Integer
        assert arg0?

      //XOR accepts any type of parameter (just one) and returns any type
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator xor
        ->
          arg0 as Integer
          arg1 as String
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator xor
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: RETURNING_MISSING
      operator xor
        -> arg0 as Integer
        assert arg0?

      //Modulus, accepts one parameters of any type must return an Integer

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator mod
        ->
          arg0 as Integer
          arg1 as Integer
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_FEW_ARGUMENTS
      operator mod
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_INTEGER
      operator mod
        -> arg0 as Date
        <- rtn as Float: 0.9

      //Another example of modulus - this is a working example
      operator mod
        -> arg0 as Duration
        <- rtn <- 0

      //Remainder, accepts one parameters of any type must return an Integer

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_INTEGER
      operator rem
        -> arg0 as Float
        <- rtn as Date: 2023-06-21

      //Contains, accepts one parameters of any type must return a Boolean
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_BOOLEAN
      operator contains
        -> arg0 as Float
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_BOOLEAN
      operator contains
        -> arg0 as Date
        assert arg0?

      //Matches, accepts one parameters of any type must return a Boolean
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_BOOLEAN
      operator matches
        -> arg0 as Float
        <- rtn as Integer: 0

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: MUST_RETURN_BOOLEAN
      operator matches
        -> arg0 as Date
        assert arg0?

      //Now some examples of incorrect close operator

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: RETURN_VALUE_NOT_SUPPORTED
      operator close
        <- rtn <- true
        val <- 1
        assert val?

      //This error will take precedence
      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator close
        -> arg0 as String
        <- rtn <- true

      @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TOO_MANY_ARGUMENTS
      operator close
        ->
          arg0 as String
          arg1 as Integer
        <- rtn <- true

//EOF